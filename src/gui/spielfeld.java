/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import arimaa.Spielfeld;
import arimaa.Spielfigur;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.Image;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;

/**
 *
 * @author Marcus
 */
public class spielfeld extends javax.swing.JPanel {

    int SIZE = 9;
    FeldPanel[][] chessboard;
    //Spielfeldvariablen
    Color koords = Color.WHITE;
    Color gold = new Color(212, 154, 78);
    Color silber = Color.white;
    
    Spielfeld spielfeld;

    /**
     * Creates new form spielfeld
     */
    public spielfeld() {
        initComponents();
        setBackground(Color.white);
        this.spielfeld = new Spielfeld();
        spielfeld.set("B2", new Spielfigur("Gold", "Elefant"));
        spielfeld.set("B3", new Spielfigur("Gold", "Katze"));
        spielfeld.set("B4", new Spielfigur("Gold", "Kamel"));
        spielfeld.set("B5", new Spielfigur("Gold", "Hund"));
        repaint();
    }

    public void generiereFeld(Graphics g) {
        setLayout(new GridLayout(SIZE, SIZE));
        char c = 'a';
        chessboard = new FeldPanel[SIZE][SIZE];
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                chessboard[i][j] = new FeldPanel();
                FeldPanel current = chessboard[i][j];
                current.setBorder(BorderFactory.createLineBorder(Color.black));
                current.setLayout(new FlowLayout(1));
                if (i == 0) {
                    if (j != 0) {
                        current.add(new JLabel(Integer.toString(j)));
                    }
                    current.setBackground(koords);
                } else if (j == 0) {
                    current.add(new JLabel(Character.toString(c)));
                    c++;
                    current.setBackground(koords);
                } else {
                    if (((i + j) % 2) == 0) {
                        current.setBackground(gold);
                        current.background = gold;
                    } else {
                        current.setBackground(silber);
                        current.background = silber;
                    }
                }
                current.setSize(50, 50);
                //Icon wird eingefÃ¼gt
                
                if (i > 0 && j > 0 && i < 8 && j < 8) {
                    if (spielfeld.get(i, j) != null) {
                        printIcon(g, current, spielfeld, i, j);
                    }
                }
                add(current);
            }  
        }
    }

    public void printIcon(Graphics g, FeldPanel current, Spielfeld spielfeld, int i, int j) {
        String path = "C:\\Users\\Marcus\\Documents\\GitHub\\Arimaa\\src\\icons\\";
        Spielfigur sf = spielfeld.get(i, j);
        String[] typen = {"Elefant", "Kamel", "Pferd", "Hund", "Katze"};
        for (String typ : typen) {
            if (sf.compareTo(new Spielfigur("Gold", typ)) == 0) {
                //ImageIcon im = new ImageIcon(path + "Elefant" + "Gold" + ".png");
                //Image image = im.getImage();
                //current.icon = image;
                //current.repaint();
                JLabel jl = new JLabel(new ImageIcon(path + typ + sf.getFarbe().toString() + ".png"));
                current.add(jl);
                break;
            }
        }
    }

    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        generiereFeld(g);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 558, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
